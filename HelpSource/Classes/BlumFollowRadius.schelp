TITLE:: BlumFollowRadius
summary:: Stereo radius analysis
categories:: Libraries>Blumlein Box>Analyses, UGens>Analysis
related:: Classes/BlumFollowAngle

DESCRIPTION::
Measure the encoding radius of a stereo signal.

CLASSMETHODS::

METHOD:: ar, kr

ARGUMENT:: in
The stereo input, an array: [L, R]

ARGUMENT:: size
Number of samples for Hilbert window (i.e. FFT size) or running sum. See link::Classes/RunningSum:: and link::Classes/HilbertW:: for more info.

Note:: For instantaneous analysis, size must be a power of two!::

ARGUMENT:: method
code::\instant:: for instantaneous analysis or code::\average:: for time-averaged analysis

returns::
Signal encoding radius


EXAMPLES::

NOTE:: In the following example, note that with a constant amplitude, rotating a stereo signal has no effect on its analyzed radius!::

code::
(
~radiusTest = {
    var in, out;
    var amp, rotLFO;
    var instant, average;
    var makeUpDelay;
    var size = 2048;
    var halfSize = (size / 2).asInteger;

	// amplitude: select one!
	amp = SinOsc.kr(0.5).range(0.05, 0.25);
	// amp = 0.25; // constant amplitude

    // Inputs: select one
    in = SinOsc.ar([440, 330]);
    // in = PinkNoise.ar();

	// rotation modulator
    rotLFO = LFSaw.kr(0.1).range(-pi/2, pi/2); // rotation angle oscillates between +/- pi/2

    // apply rotation
	in = BlumRotate.ar(in, rotLFO);

	// apply amplitude modulation
	in = in * amp;

    // Instant and average output
    instant = BlumFollowPower.ar(in, method: \instant);
    average = BlumFollowPower.ar(in, method: \average);

    // match delay of instant and average for comparison
    makeUpDelay = ((halfSize * SampleDur.ir) - ControlDur.ir);
    average = DelayN.ar(average, makeUpDelay, makeUpDelay);

    // Select one: ompare instant vs average
	out = average;
	// out = instant;
    // out = (instant.neg + average); // difference between instantaneous and average

	// write analysis to post window
	out.poll(label: "analyzed");

	// listen to source
	in
}.play()
)
::