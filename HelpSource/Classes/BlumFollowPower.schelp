TITLE:: BlumFollowPower
summary:: Stereo power analysis
categories:: Libraries>Blumlein Box>Analyses, UGens>Analysis

DESCRIPTION::
Measure the power of a stereo signal.

CLASSMETHODS::

METHOD:: ar, kr

ARGUMENT:: in
The stereo input, an array: [L, R]

ARGUMENT:: size
Number of samples for Hilbert window (i.e. FFT size) or running sum. See link::Classes/RunningSum:: and link::Classes/HilbertW:: for more info.

Note:: For instantaneous analysis, size must be a power of two!::

ARGUMENT:: method
code::\instant:: for instantaneous analysis or code::\average:: for time-averaged analysis

returns::
Signal power


EXAMPLES::

code::
(
~powerTest = {
    var in, out;
	var freqLFO, ampLFO;
    var instant, average;
    var makeUpDelay;
    var size = 2048;
    var halfSize = (size / 2).asInteger;

	freqLFO = LFNoise2.kr(72).range(0.9, 1.1);
	ampLFO = SinOsc.kr(0.5).range(0.01, 0.5);

    // Sinusoids
	in = SinOsc.ar([440 * freqLFO, 330 * freqLFO]);
    // in = SinOsc.ar([220, 0]); // Fully L
	// in = SinOsc.ar([0, 220]); // Fully R

	// Note how power changes using only one channel of the stereo input!

	// Noise
	// in =  PinkNoise.ar([1.0, 1.0]);

    // apply amplitude LFO
	in = in * ampLFO;


    // Instant and average output
    instant = BlumFollowPower.ar(in, method: \instant);
    average = BlumFollowPower.ar(in, method: \average);

    // match delay of instant and average for comparison
    makeUpDelay = ((halfSize * SampleDur.ir) - ControlDur.ir);
    average = DelayN.ar(average, makeUpDelay, makeUpDelay);

    // Select one: ompare instant vs average
    // out = average;
    out = instant;
    // out = (instant.neg + average); // difference between instantaneous and average

	// write analysis to post window
	out.poll(label: "analyzed");

	// listen to source
	in
}.play
)
::